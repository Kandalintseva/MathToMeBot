import telebot
from telebot import types
import sqlite3
import os
from datetime import datetime

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_TOKEN')
ADMIN_ID = int(os.getenv('ADMIN_ID', 0))  # 0 –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

if not TOKEN:
    print("–û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    print("–£–∫–∞–∂–∏—Ç–µ TELEGRAM_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    exit(1)

bot = telebot.TeleBot(TOKEN)

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–¥–∞–Ω–∏–π
os.makedirs('tasks', exist_ok=True)

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ SQL-–∑–∞–ø—Ä–æ—Å–∞–º–∏"""
    try:
        conn = sqlite3.connect('tutor_bot.db')
        cursor = conn.cursor()

        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ (–∏—Å–ø–æ–ª—å–∑—É—è -- –≤–º–µ—Å—Ç–æ #)
        cursor.execute('''
        CREATE TABLE IF NOT EXISTS students (
            user_id INTEGER PRIMARY KEY,
            username TEXT,
            full_name TEXT,
            class TEXT,
            register_date TEXT
        )''')

        cursor.execute('''
        CREATE TABLE IF NOT EXISTS teacher_tasks (
            task_id INTEGER PRIMARY KEY AUTOINCREMENT,
            teacher_id INTEGER,
            task_text TEXT,
            photo_path TEXT,
            create_date TEXT,
            subject TEXT
        )''')

        cursor.execute('''
        CREATE TABLE IF NOT EXISTS student_solutions (
            solution_id INTEGER PRIMARY KEY AUTOINCREMENT,
            task_id INTEGER,
            student_id INTEGER,
            solution_text TEXT,
            photo_path TEXT,
            status TEXT DEFAULT 'pending',
            submit_date TEXT,
            teacher_comment TEXT,
            FOREIGN KEY (task_id) REFERENCES teacher_tasks(task_id),
            FOREIGN KEY (student_id) REFERENCES students(user_id)
        )''')

        conn.commit()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        if conn:
            conn.close()

init_db()

@bot.message_handler(commands=['start'])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    if message.from_user.id == ADMIN_ID:
        bot.send_message(message.chat.id, 
                        "üë®üè´ –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ —É—á–∏—Ç–µ–ª—å. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                        "/add_task - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ\n"
                        "/check_solutions - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ—à–µ–Ω–∏—è")
    else:
        bot.send_message(message.chat.id,
                        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-—Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä.\n"
                        "/register - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è\n"
                        "/my_tasks - –º–æ–∏ –∑–∞–¥–∞–Ω–∏—è")

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è —Ç–∞–∫–∏–º–∏ –∂–µ, –Ω–æ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫)

def save_photo(file_info, file_path):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ"""
    try:
        downloaded_file = bot.download_file(file_info.file_path)
        with open(file_path, 'wb') as new_file:
            new_file.write(downloaded_file)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ: {e}")
        return False

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    try:
        bot.infinity_polling()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
